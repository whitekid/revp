// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	context "context"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"

	pb "revp/pb/v1alpha1"
)

// RevpClient is an autogenerated mock type for the RevpClient type
type RevpClient struct {
	mock.Mock
}

// Stream provides a mock function with given fields: ctx, opts
func (_m *RevpClient) Stream(ctx context.Context, opts ...grpc.CallOption) (pb.Revp_StreamClient, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 pb.Revp_StreamClient
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, ...grpc.CallOption) (pb.Revp_StreamClient, error)); ok {
		return rf(ctx, opts...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, ...grpc.CallOption) pb.Revp_StreamClient); ok {
		r0 = rf(ctx, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.Revp_StreamClient)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRevpClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewRevpClient creates a new instance of RevpClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRevpClient(t mockConstructorTestingTNewRevpClient) *RevpClient {
	mock := &RevpClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
